"use strict";angular.module("ipublic.ntipa-angular",[]).factory("EnteService",["$resource",function($resource){return $resource("/manager/app/rest/account/:action/:enteId/:gruppoId",{},{enties:{method:"GET",isArray:!0,params:{action:"enties"}},organigramma:{method:"GET",isArray:!1,params:{action:"enties",gruppoId:"organigramma"}},group:{method:"GET",isArray:!1,params:{action:"groups"}}})}]).factory("Password",["$resource",function($resource){return $resource("/manager/app/rest/account/change_password",{},{})}]).factory("Sessions",["$resource",function($resource){return $resource("/manager/app/rest/account/sessions/:series",{},{get:{method:"GET",isArray:!0}})}]).factory("Oauth2Service",["$rootScope","$http","authService","Session","Account","$log","localStorageService","Ente","$location","$base64",function($rootScope,$http,authService,Session,Account,$log,localStorageService,Ente,$location){function recursiveVociTitolario(nodes,titolarioName,titolarioId){angular.forEach(nodes,function(nodo){nodo.titolarioId=titolarioId,nodo.titolarioName=titolarioName;var idVoce=nodo.titolarioId+"|"+nodo.id;nodo.idVoce=idVoce,$rootScope.titolari.push(nodo),recursiveVociTitolario(nodo.nodes,nodo.titolarioName,titolarioId)})}function recursiveStruttura(struttura,paths){$log.debug("struttura:"+struttura);var paths=paths+" "+struttura.name;angular.forEach(struttura.categorie,function(categoria){$rootScope.categorias.push(categoria)}),angular.forEach(struttura.titolari,function(titolario){titolario.nodes=angular.fromJson(titolario.voci),titolario.voci=null,recursiveVociTitolario(titolario.nodes,titolario.name,titolario.id)}),angular.forEach(struttura.gruppi,function(gruppo){gruppo.struttura={name:paths},$rootScope.strutturas.push(gruppo),angular.forEach(gruppo.utenti,function(utente){$rootScope.users.push(utente)})}),angular.forEach(struttura.children,function(struttura2){recursiveStruttura(struttura2,paths)})}var keyAuthorization="Authorization",keyAccessToken="access.token",keySession="user.session",keyEntiesSession="enties.session",keyOrganigramma="organigramma",keyCategorias="keyCategorias",keyTitolaris="keyTitolaris",keyStrutturas="keyStrutturas",keyUsers="keyUsers",keyMapCategorias="keyMapCategorias",keyMapTitolaris="keyMapTitolaris";return{loadAccount:function(){Account.get(function(data){$rootScope.account=data,localStorageService.add(keySession,data),$log.debug("data.enteId:"+data.enteId),null!=data.enteId&&"null"!=data.enteId&&EnteService.organigramma({enteId:data.enteId},function(data){$rootScope.organigramma=data,localStorageService.add(keyOrganigramma,$rootScope.organigramma),$rootScope.users=[],$rootScope.categorias=[],$rootScope.titolari=[],$rootScope.strutturas=[],$log.debug(data),angular.forEach(data.strutture,function(struttura){recursiveStruttura(struttura,"")}),localStorageService.remove(keyCategorias),localStorageService.remove(keyStrutturas),localStorageService.remove(keyTitolaris),localStorageService.remove(keyUsers),localStorageService.add(keyCategorias,$rootScope.categorias),localStorageService.add(keyStrutturas,$rootScope.strutturas),localStorageService.add(keyTitolaris,$rootScope.titolari),localStorageService.add(keyUsers,$rootScope.users),$rootScope.mapCategorias={},angular.forEach($rootScope.categorias,function(categoria){$rootScope.mapCategorias[categoria.id]=categoria}),localStorageService.add(keyMapCategorias,$rootScope.mapCategorias),$rootScope.mapTitolaris={},angular.forEach($rootScope.titolari,function(item){$rootScope.mapTitolaris[item.idVoce]=item}),localStorageService.add(keyMapTitolaris,$rootScope.mapTitolaris)}),EnteService.enties(function(data){localStorageService.add(keyEntiesSession,data),$rootScope.enties=data}),Session.create(data.login,data.firstName,data.lastName,data.email,data.roles),authService.loginConfirmed(data)})},loadLocalToken:function(){if($rootScope.token=localStorageService.get(keyAuthorization),$rootScope.accessToken=localStorageService.get(keyAccessToken),$log.info("getLocalToken:"+$rootScope.token),null!==$rootScope.token){$http.defaults.headers.common[keyAuthorization]=$rootScope.token;var data=localStorageService.get(keySession);$rootScope.enties=localStorageService.get(keyEntiesSession),null!=data&&null!=data.login?($rootScope.account=data,Session.create(data.login,data.firstName,data.lastName,data.email,data.roles),$rootScope.users=[],$rootScope.strutturas=[],$rootScope.categorias=[],$rootScope.titolari=[],$rootScope.organigramma=localStorageService.get(keyOrganigramma),$rootScope.categorias=localStorageService.get(keyCategorias),$rootScope.strutturas=localStorageService.get(keyStrutturas),$rootScope.titolari=localStorageService.get(keyTitolaris),$rootScope.users=localStorageService.get(keyUsers),$rootScope.mapCategorias=localStorageService.get(keyMapCategorias),$rootScope.mapTitolaris=localStorageService.get(keyMapTitolaris),$log.info("getLocaluser:"),$log.info($rootScope.account)):$location.path("/login").replace()}},clear:function(){$rootScope.authenticationError=!1,$rootScope.authenticationError=!1,$rootScope.authenticated=!1,$log.info("clear"),$rootScope.username="",$rootScope.password="",$rootScope.account=null,$rootScope.user=null,$rootScope.token="",$rootScope.accessToken="",localStorageService.remove(keyAuthorization),localStorageService.remove(keyAccessToken),localStorageService.remove(keySession),localStorageService.remove(keyEntiesSession),localStorageService.remove(keyCategorias),localStorageService.remove(keyTitolaris),localStorageService.remove(keyStrutturas),localStorageService.remove(keyUsers),Session.invalidate(),delete $http.defaults.headers.common[keyAuthorization]}}}]).factory("AuthenticationSharedService",["$rootScope","$http","authService","Session","Account","$log","localStorageService","Ente","Oauth2Service",function($rootScope,$http,authService,Session,Account,$log,localStorageService,Ente,Oauth2Service){var keyAuthorization="Authorization",keyAccessToken="access.token",keySession="user.session";return{login:function(param){var data="grant_type=password&client_id=box&scope=read&username="+param.username+"&password="+param.password;$log.info("data:"+data),Oauth2Service.clear(),$http.post("/authserver/oauth/token",data,{headers:{"Content-Type":"application/x-www-form-urlencoded"},ignoreAuthModule:"ignoreAuthModule"}).success(function(data){$rootScope.authenticationError=!1,$rootScope.accessToken=data.access_token;var token="Bearer "+$rootScope.accessToken;$log.info("Authorization:"+token),$http.defaults.headers.common[keyAuthorization]=token,localStorageService.add(keyAuthorization,token),localStorageService.add(keyAccessToken,$rootScope.accessToken),Oauth2Service.loadAccount()}).error(function(){$rootScope.authenticationError=!0,Session.invalidate()})},changeRoles:function(enteId,gruppoId){$log.info("enteId:"+enteId),$log.info("gruppoId:"+gruppoId);var data=$rootScope.accessToken+"/"+enteId+"/"+gruppoId;$http.get("/authserver/oauth/users/change/roles/"+data).success(function(){Oauth2Service.loadAccount()}).error(function(){$rootScope.authenticationError=!0})},valid:function(authorizedRoles){$log.info("on valid authorizedRoles"+authorizedRoles),$http.get("/box/protected/transparent.gif",{ignoreAuthModule:"ignoreAuthModule"}).success(function(){Session.login&&Account.get(function(data){Session.create(data.login,data.firstName,data.lastName,data.email,data.roles),$rootScope.account=data,$rootScope.isAuthorized(authorizedRoles)||(event.preventDefault(),$rootScope.$broadcast("event:auth-notAuthorized")),$rootScope.authenticated=!0}),$rootScope.authenticated=!!Session.login}).error(function(){$rootScope.authenticated=!1})},isAuthorized:function(authorizedRoles){if(!angular.isArray(authorizedRoles)){if("*"==authorizedRoles)return!0;authorizedRoles=[authorizedRoles]}var isAuthorized=!1;return angular.forEach(authorizedRoles,function(authorizedRole){var authorized=!angular.isUndefined(Session.userRoles)&&!!Session.login&&!angular.isUndefined(Session.userRoles)&&-1!==Session.userRoles.indexOf(authorizedRole);(authorized||"*"==authorizedRole)&&(isAuthorized=!0)}),isAuthorized},logout:function(){$rootScope.authenticationError=!1,$rootScope.authenticated=!1,$rootScope.account=null,$rootScope.user=null,localStorageService.remove(keyAuthorization),localStorageService.remove(keyAccessToken),localStorageService.remove(keySession),delete $http.defaults.headers.common[keyAuthorization],$rootScope.token="",$rootScope.accessToken="",$http.get("/box/app/logout"),Oauth2Service.clear(),authService.loginCancelled()},loadLocalToken:function(){Oauth2Service.loadLocalToken()}}}]);